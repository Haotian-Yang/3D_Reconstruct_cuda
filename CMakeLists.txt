CMAKE_MINIMUM_REQUIRED( VERSION 3.16 )
PROJECT( 3D-Reconstruct )
set(CMAKE_CXX_FLAGS "-std=c++11 -Wall -ljsoncpp" )
set(CMAKE_CXX_FLAGS "-fPIC" )

SET( CMAKE_CXX_COMPILER "g++")
SET( CMAKE_CXX_STANDARD 17)
#SET( CMAKE_CXX_STANDARD 14)
SET( CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
SET( CMAKE_BUILD_TYPE "Debug")
#SET( libSGM ${PROJECT_SOURCE_DIR}/libSGM)
SET( EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
SET( LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)

set(CMAKE_PREFIX_PATH "/usr/local/include/opencv/opencv4")
INCLUDE_DIRECTORIES( ${PROJECT_SOURCE_DIR}/include)
include_directories(${PROJECT_SOURCE_DIR}/libSGM/include)
#INCLUDE_DIRECTORIES( ${libSGM}/include)

# CUDA options
SET(CUDA_ARCH "-arch=sm_50" CACHE STRING "Value of the NVCC -arch option.")
if(${CMAKE_VERSION} VERSION_EQUAL 3.7 OR ${CMAKE_VERSION} VERSION_GREATER 3.7)
option(AUTO_DETECT_ARCH "Detect local GPU compute arch automatically" ON)
endif()

# OpenCV
#FIND_PACKAGE( OpenCV 3.4 )
FIND_PACKAGE( OpenCV 4.3.0 )
INCLUDE_DIRECTORIES(${OpenCV_INCLUDE_DIRS})

# CUDA
FIND_PACKAGE( CUDA REQUIRED)
INCLUDE_DIRECTORIES(${CUDA_INCLUDE_DIRS})
# PCL
FIND_PACKAGE( PCL REQUIRED)
ADD_DEFINITIONS( ${PCL_DEFINITIONS} )
INCLUDE_DIRECTORIES( ${PCL_INCLUDE_DIRS}  )
#LINK_LIBRARIES( ${PCL_LIBRARY_DIRS} )

#SET( libSGM_LIB ${libSGM}/lib/libsgm.so)
SET( THIRD_PARTY_LIBRARIES ${OpenCV_LIBS} ${PCL_LIBRARIES} ${CUDA_LIBRARIES})

add_subdirectory(./src/)
add_subdirectory(./libSGM/src)
add_subdirectory(./test/)

